<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
 <parent>
        <artifactId>incident-service-fuse</artifactId>
        <groupId>com.redhat.cajun.navy</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
 <modelVersion>4.0.0</modelVersion>

  <artifactId>incident-service-fuse-stub</artifactId>

  <packaging>jar</packaging>

  <name>OpenAPI stub and mock object creation</name>
  <description>Spring Boot example running a Camel REST route connecting to a SQL database</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- Spring Boot default profile in order to use an embedded database -->
    <run.profiles>dev</run.profiles>

    <!-- configure the versions you want to use here -->
    <fuse.version>7.2.0.fuse-720020-redhat-00001</fuse.version>

    <tomcat.juli.version>8.0.36</tomcat.juli.version>

    <!-- Maven plugin versions -->
    <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
    <build.plugins.plugin.version>3.0.0</build.plugins.plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.redhat-fuse</groupId>
        <artifactId>fuse-springboot-bom</artifactId>
        <version>${fuse.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Need to use 8.0.36 tomcat-juli, redhat build has not been released -->
      <dependency>
        <groupId>org.apache.tomcat</groupId>
        <artifactId>tomcat-juli</artifactId>
        <version>${tomcat.juli.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>

    <dependency>
      <groupId>com.github.joschi.jackson</groupId>
      <artifactId>jackson-datatype-threetenbp</artifactId>
       <version>2.8.4</version>
    </dependency>
    <!--
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-threetenbp</artifactId>
    </dependency> -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.8</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter-undertow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-servlet-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jackson-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-swagger-java-starter</artifactId>
<!--       <exclusions> -->
<!--         <exclusion> -->
<!--           <groupId>javax.ws.rs</groupId> -->
<!--           <artifactId>jsr311-api</artifactId> -->
<!--            <version>1.1.1</version> -->
<!--         </exclusion> -->
<!--       </exclusions> -->
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring-javaconfig</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
      <version>2.0.2.RELEASE</version>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.arquillian.junit</groupId>
      <artifactId>arquillian-junit-container</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric8-arquillian</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.5</version>
    </dependency>
    <dependency>
      <groupId>org.threeten</groupId>
      <artifactId>threetenbp</artifactId>
      <version>1.3.7</version>
    </dependency>


    <dependency>
      <groupId>org.keycloak</groupId>
      <artifactId>keycloak-admin-client</artifactId>
     <!-- <version>3.4.3.Final</version> -->

      <version>4.8.3.Final-redhat-00001</version>
    </dependency>


    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-client</artifactId>
      <version>3.14.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-multipart-provider</artifactId>
      <version>3.5.0.Final</version>
    </dependency>

    <!--
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>  -->
  </dependencies>

  <!--
  swagger-jersey2-jaxrs  -->

  <build>
    <!-- <defaultGoal>spring-boot:run</defaultGoal> -->
    <defaultGoal>clean camel-restdsl-swagger:generate-xml-with-dto</defaultGoal>

    <plugins>
      <!-- Compiler plugin enforces Java 1.8 compatibility -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/*KT.java</exclude>
          </excludes>
        </configuration>
      </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-source-plugin</artifactId>
    <version>3.2.0</version>
		<executions>
			<execution>
				<id>attach-sources</id>
				<goals>
					<goal>jar</goal>
				</goals>
			</execution>
		</executions>
	   </plugin>
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-restdsl-swagger-plugin</artifactId>
        <version>2.23.2</version>
        <executions>
          <execution>
            <goals>
              <goal>generate-xml-with-dto</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
       <!--   <specificationUri>src/spec/publisher-swagger.json</specificationUri> -->
          <specificationUri>${project.basedir}/src/spec/openapi.json</specificationUri>
          <fileName>camel-rest.xml</fileName>

          <!-- comment this to stop the rest dsl from being generated. or published.-->
          <outputDirectory>${project.build.directory}/generated-sources/src/main/resources/camel-rest</outputDirectory>
          <modelOutput>${project.build.directory}/generated-sources</modelOutput>
          <modelPackage>com.redhat.cajun.navy.incident.entity</modelPackage>
        </configuration>
      </plugin>
       <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.plugins.plugin.version}</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/src/main/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
                  <directory>${project.build.directory}/generated-sources/src/main/resources</directory>
                </resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
    </plugins>
  </build>

</project>

